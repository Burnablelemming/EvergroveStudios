#This is a slightly outdated version of visitTree() containted in the SkillTree.gd script.
#Im saving this because it still has the print statements so if I ever forget how it works I can check this out
func visitTree():
	print("---------------------------------------")
	print("CurrentNode: ", currentNode.name)
	for child in currentNode.get_children():
		if child is Area2D:
			children.append(child)
	for child in children:
		if visited.has(child):
			print("   Node ", child, " has been visited before")
			if children.find(child) == children.size() - 1:
				if currentNode == start:
					print("All nodes in the tree have been documented - EXIT NOW")
					children.clear()
					return
				print("   Every child of the current node have been visited")
				print("   Setting the current node to the parent of the current node")
				children.clear()
				currentNode = child.get_parent().get_parent()
				visitTree()
		else:
			print("   Selected node: ", currentNode.name, " and current child: ", child.name)
			visited.append(child)
			if child.get_child_count() > extraChildren:
				linePairs.append(currentNode)
				linePairs.append(child)
				print("      Child: ", child.name, " has an Area2D child - setting it as currentNode")
				children.clear()
				currentNode = child
				visitTree()
			else:
				print("      Child: ", child.name, " was a leaf node")
				linePairs.append(currentNode)
				linePairs.append(child)
				if children.find(child) == children.size() - 1:
					children.clear()
					print("         There are no other children to check")
					#currentNode = child.get_parent()
					visitTree()

#This is the old drawLines.gd
#######################################################################################
var treeData : Array
var colorLines = Color(255,255,255)

func _ready():
	update()

func _draw():
	if treeData.empty():
		return
	
	print("drawing lines")
	var source : int = 0
	var dest : int = 1
	
	for times in (treeData.size() / 2):
		draw_line(treeData[source].get_global_position(), treeData[dest].get_global_position(), colorLines, 4)
		source += 2
		dest += 2
	
	emit_signal("treeData", treeData)

#This is the old draw strings
#######################################################################
var treeData : Array
var font
var colorText = Color(0,0,0)

func _ready():
	font = Label.new().get_font("")
	update()

func _draw():
	if treeData.empty():
		return
	
	print("Drawing strings")
	var source : int = 0
	var dest : int = 1

	var xVect : float
	var yVect : float
	var compVect : Vector2
	var distVect : float

	for times in (treeData.size() / 2):
		#TODO - Something weird is going on here, but it is working to my benefit, but it also eventually needs to be fixed or at least understood
		xVect = (treeData[source].get_global_position().x + treeData[dest].get_global_position().x) / 2
		yVect = (treeData[source].get_global_position().y + treeData[dest].get_global_position().y) / 2
		compVect = Vector2(xVect, yVect)
		distVect = abs(treeData[source].get_global_position().x) + abs(treeData[dest].get_global_position().x) + abs(treeData[source].get_global_position().y) + abs(treeData[dest].get_global_position().y)
		draw_string(font, compVect, str(distVect), colorText)
		
		source += 2
		dest += 2
